{"version":3,"sources":["components/MyContext.js","components/searchBox.js","components/dateEditeur.js","components/traductionMeteo.js","components/resultBox.js","components/geolocalisation.js","components/erreurBox.js","components/jourEditeur.js","components/fiveDays.js","App.js","reportWebVitals.js","index.js"],"names":["defaultContext","query","setQuery","result","setResult","UserContext","React","createContext","api","process","apiGeo","SearchBox","useContext","useState","villePays","setVillePays","Search","event","keyCode","target","innerHTML","fetch","then","response","json","dataJson","a","catch","console","error","searchMeteoCity","data","split","className","id","type","placeholder","onChange","value","onKeyUp","onClick","length","map","index","name","country","editeurDate","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","traductionMeteo","key","ResultBox","city","Date","Math","round","list","main","temp","weather","description","GeoLocalisation","api2","ErrorBox","jourDate","hour","getHours","FiveDays","dt_txt","src","icon","alt","App","contextValue","Provider","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1b1afbb.chunk.js","sourcesContent":["import React from 'react';\n\nconst defaultContext ={   \n    //questionne le nom de la commune\n    query: \"\",\n    setQuery: () => {},\n    //stocke le résultat de la requête API météo\n    result:{},    \n    setResult: () => {}   \n};\n\nexport const UserContext=React.createContext(defaultContext)","import React, { useContext, useState } from 'react';\nimport { UserContext } from './MyContext';\n\nconst api = {\n\tkey : process.env.REACT_APP_TOKEN,\n\tbase :\"https://api.openweathermap.org/data/2.5/\"\n  }\n\nconst apiGeo = {\nkey : process.env.REACT_APP_TOKEN,\nbase :\"https://api.openweathermap.org/geo/1.0/direct\"\n}\n\nfunction SearchBox () {  \n    \n    const {query}=useContext(UserContext)\n    const {setQuery}=useContext(UserContext)   \n    const {setResult}=useContext(UserContext)    \n    const [villePays,setVillePays]= useState('')\n           \n    /*recherche fait dans l'input*/\n\tconst Search = event =>{\n            \n\t\tif (event.keyCode === 13 || event.target.innerHTML==='?'){\n\n            fetch(`${apiGeo.base}?q=${query}&appid=${api.key}&limit=5`)\n\t\t\t.then((response)=>response.json())\n            .then(async (dataJson) => {                \n                setVillePays(dataJson)             \t\n\t\t\t})\t\t\t\t\n\t\t\t.catch(console.error)          \n\t\t}\t\t\t\n\t}\t\n\n    const searchMeteoCity = event=>{  \n       \n        const data=event.target.innerHTML.split(' ')\n              \n        fetch(`${api.base}forecast?q=${data[0]},${data[1]}&units=metric&appid=${api.key}&lang=fr`)\n        .then((response)=>response.json())\n        .then(async (dataJson) => {                \n            setResult(await dataJson)\t\t\t\t\t\n            setQuery('') \n            setVillePays('')                            \t\n        })\t\t\t\t\n        .catch(console.error)    \n    }\n    \n    return(        \n        <div>\n            <div className=\"search-box\" >\n                    <input\n                        id=\"query\"\n                        type=\"text\"\n                        className=\"search-bar\"\n                        placeholder=\" Recherche...\"\n                        onChange={event => setQuery(event.target.value)}\n                        value={query}\n                        onKeyUp={Search}/>\n\n                    <button\n                    className=\" btn btn-info\"\n                    onClick={Search}>\n                        ?\n                    </button>                                      \n            </div>   \n\n            <div className=\"p-2\">\n                {(villePays.length>0)\n                    ? ( <div className=\"cityList\">\n                            {villePays.map((data,index)=>(\n                            <div className=\"mx-1\" key={index}>\n                                <div className=\"btn btn-info\"\n                                onClick={searchMeteoCity}\n                                >\n                                {data.name+' '+data.country}\n                                </div>\n                            </div>\n                            ))}                            \n                        </div>                 \n                    )  \n                    : (\n                    <button className=\"invisible btn\"> Espace blanc </button>\n                    ) \n                }                              \n            </div>           \n        </div>\n     )      \n}\n\nexport default SearchBox","/*edite la date au format Jour Numéro Mois Année*/\nconst editeurDate = (d) => {\n    let months = ['Janvier','Février','Mars','Avril','Mai','Juin',\n'Juillet','Août','Septembre','Octobre','Novembre','Décembre']\n    let days = ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi']\n\n    let day=days[d.getDay()]\n    let date=d.getDate()\n    let month=months[d.getMonth()]\n    let year=d.getFullYear()\n\n    return `${day} ${date} ${month} ${year}`\n}\nexport default editeurDate","/*traduction des conditions météos de l'anglais vers le français*/\n\nconst traductionMeteo = (key) =>{\n    switch (key) {\n        case 'Rain':\n            return 'Pluie'\t\t\t\n            \n        case 'Thunderstorm':\n            return 'Orage'\t\t\t\t\n            \n        case 'Drizzle':\n            return 'Bruine'\t\t\t\t\n            \n        case 'Snow':\n            return 'Neige'\n\n        case 'Atmosphere':\n        return 'Climat'\n\n        case 'Clear':\n        return 'Soleil'\n\n        case 'Clouds':\n        return 'Nuages'\n            \n        default:\t\t\t\t\n            break;\n    }\n}\n\nexport default traductionMeteo","import React, { useContext } from 'react';\nimport { UserContext } from './MyContext';\nimport editeurDate from './dateEditeur';\nimport traductionMeteo from './traductionMeteo';\n\nfunction ResultBox () {\n\n    const {result}=useContext(UserContext)\n\t\n    return(\n\t\t<div className=\"textReponse\">\t\t\t\n\t\t\t <div className=\"location\">\n\t\t\t{result.city.name} {result.city.country}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t</div>\t\n\t\t\t<div className=\"date\">\n\t\t\t\t{editeurDate(new Date())}\n\t\t\t</div>\t\t\t\n\t\t\t<div className=\"température\">\n\t\t\t{Math.round(result.list[0].main.temp)}°c\n\t\t\t</div>\n\t\t\t<div className=\"weather\">\n\t\t\t{traductionMeteo(result.list[0].weather[0].main)} : {result.list[0].weather[0].description}\t\t\t\t\t\n\t\t\t</div>\t\t\t\t\t\n\t\t</div>   \n\t\t   \n    )    \n}\n\nexport default ResultBox","import React, { useContext } from 'react';\nimport { UserContext } from './MyContext';\n\nfunction GeoLocalisation () {   \n    \n    const {setQuery}=useContext(UserContext)       \n    const {setResult}=useContext(UserContext)\n    \n    const api = {\n        key : process.env.REACT_APP_TOKEN,\n        base :\"https://api.openweathermap.org/data/2.5/\"\n      }\n   \n    const api2 = {\n        key : process.env.REACT_APP_TOKEN2,\n        base :'https://geolocation-db.com/json/'\n      }             \n\n    const localise = ()=>{\n        fetch(`${api2.base}${api2.key}`)\n        \n        .then((response)=>response.json())\n        .then((data)=>{ \n            fetch(`${api.base}forecast?q=${data.city}&units=metric&appid=${api.key}&lang=fr`)\n\t\t\t.then((response)=>response.json())\n            .then(async (dataJson) => {\t                \t\t\t\t\t\n\t\t\t\tsetResult(await dataJson)\t\t\t\t\t\n\t\t\t\tsetQuery('')                            \t\n\t\t\t})\t\t\t\t\n\t\t\t.catch(console.error)       \t\t              \n        })        \n        .catch (console.error)      }\n\n            \n    return(\n        <div>\n            <button className=\"btn btn-info btn-lg \"\n                onClick={localise}>\n                    Météo de ma position\n            </button>\n            \n        </div>\n    )\n}\n\nexport default GeoLocalisation","import React from 'react';\n\n /* Affiche une erreur si la requête échoue*/\n\nfunction ErrorBox () {\n\n    return(\n       \t<div className=\"textErreur\">\t\t\t\t\n            <div>\t\t\t\t\n                La commune n'existe pas ou elle est mal orthographiée ...\n            </div>\t\t\t\t\n        </div>\n    )\n}\n\nexport default ErrorBox","/*edite le jour de la semaine*/\nconst jourDate = (d) => {\n\n    let date=new Date(d)\n  \n    let days = ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi']\n    let day=days[date.getDay()]\n    let hour=date.getHours()\n    \n    return (\n        <div>\n            <p>{day}</p>\n            <p>{hour}h</p>            \n        </div>\n    )      \n   \n}\nexport default jourDate","import React, { useContext } from 'react';\nimport { UserContext } from './MyContext';\nimport jourDate from './jourEditeur';\n\nfunction FiveDays (){\n\n    const {result}=useContext(UserContext)  \n            \n    return (\n        <div className='fiveDayMeteo'>                \n                  {result.list.map((data,index)=>(\n                      <ul className=\"squareMeteo border border-dark p-2\" key={index}>\n                          <li>{jourDate(data.dt_txt)}</li>\n                          <li><img src={`http://openweathermap.org/img/w/${data.weather[0].icon}.png`} alt='icone meteo'/></li>\n                          <li>{Math.round(data.main.temp)}°C</li>\n                          <li className=\"descriptionMeteo\">{data.weather[0].description}</li>\n                          \n                    </ul>\n                  ))}              \n        </div>\n    )\n}\n\nexport default FiveDays","import React, { useState } from 'react';\nimport { UserContext } from './components/MyContext';\n\nimport SearchBox from './components/searchBox'\nimport ResultBox from './components/resultBox'\nimport GeoLocalisation from './components/geolocalisation'\nimport ErrorBox from './components/erreurBox';\nimport FiveDays from './components/fiveDays'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nfunction App() {\n\n\t/* requête du nom de la ville */\n\tconst [query, setQuery] = useState ('')\n\n\t/*stocke le résultat de la requête*/\n\tconst [result, setResult] = useState ({})\t\n\n\tconst contextValue = {\n\t\tquery,setQuery,\n\t\tresult,setResult\t\t\t\n\t  };\t\n\n  return (\n    <div className={\n\t\t(typeof result.list !=\"undefined\") \n\t\t?  result.list[0].weather[0].main\n\t\t:'intro'}>\t\t\n\n\t\t<UserContext.Provider value={contextValue}>\n     \t<main>\t\n\t\t\t\n\t\t\t<div className='container'>\n\t\t\t<SearchBox></SearchBox>\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='container'>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-3\">\n\t\t\t\t\t\t<GeoLocalisation></GeoLocalisation>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t<div className=\"col-9\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t{(result.cod ==='200') \n\t\t\t\t\t\t\t? (<ResultBox></ResultBox>)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{(result.cod ==='200') \n\t\t\t\t\t\t\t? (<FiveDays></FiveDays>)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\t\n\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t </div>\t\n\n\t\t\t<div className='container'>\n\t\t\t\t{(result.cod ==='404') \n\t\t\t\t\t? <ErrorBox></ErrorBox>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\t\t\t\n\t\t\t\n\t\t\t\n     \t</main>\n\t  \t</UserContext.Provider>\n    </div>  \n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/dist/css/index.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}